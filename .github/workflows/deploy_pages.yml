name: Deploy Validator Site

on:
  push:
    branches: ["master"]
    paths:
      - 'docs/validator/**'
      - 'spotifyActionService/src/logic/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.upload.outputs.artifact_id }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install required tools
        run: |
          pip install pyodide-build
          EMSDK_VER=$(pyodide config get emscripten_version)
          echo "EMSDK_VER=$EMSDK_VER" >> $GITHUB_ENV
          curl -sL https://emscripten.sdk/releases/${EMSDK_VER}/emsdk-${EMSDK_VER}-linux.tar.gz | tar -xz
          source emsdk-${EMSDK_VER}/emsdk_env.sh
          ./emsdk-${EMSDK_VER}/emsdk install ${EMSDK_VER}
          ./emsdk-${EMSDK_VER}/emsdk activate ${EMSDK_VER}
          source emsdk-${EMSDK_VER}/emsdk_env.sh

      - name: Build Pyodide wheel
        run: |
          cd spotifyActionService/src/logic
          pyodide build
          cp dist/*.whl ../../../docs/validator/

      - name: Prepare static site & copy wheel
        run: |
          mkdir -p docs/validator
          # ensure index.html is there with correct content

      - name: Upload Pages artifact
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/validator/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download built artifact
        uses: actions/download-pages-artifact@v3
        with:
          artifact_id: ${{ needs.build.outputs.artifact-path }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
